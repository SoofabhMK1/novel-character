"""Create lore_entries table

Revision ID: 189220a9240d
Revises: c720faa88660
Create Date: 2025-09-04 16:45:00.445374

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '189220a9240d'
down_revision: Union[str, Sequence[str], None] = 'c720faa88660'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lore_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('category', 'key', name='_category_key_uc')
    )
    op.create_index(op.f('ix_lore_entries_category'), 'lore_entries', ['category'], unique=False)
    op.create_index(op.f('ix_lore_entries_id'), 'lore_entries', ['id'], unique=False)
    op.create_index(op.f('ix_lore_entries_key'), 'lore_entries', ['key'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lore_entries_key'), table_name='lore_entries')
    op.drop_index(op.f('ix_lore_entries_id'), table_name='lore_entries')
    op.drop_index(op.f('ix_lore_entries_category'), table_name='lore_entries')
    op.drop_table('lore_entries')
    # ### end Alembic commands ###
